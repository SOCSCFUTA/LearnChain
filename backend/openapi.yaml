openapi: 3.1.0
info:
  title: LearnChain API
  description: API for managing educational institutions, certificates on blockchain
  version: 1.0.0
  contact:
    name: LearnChain API Support
    email: oghenetefa@gmail.com

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.learnchain.com
    description: Production server

tags:
  - name: institutions
    description: Institution management operations

  - name: keys
    description: API keys for authenticated Institution requests

  - name: certificates
    description: Global certificates operations

paths:
  /institutions:
    post:
      tags:
        - institutions

      summary: Create a new institution
      description: Register a new educational institution with blockchain integration
      requestBody:
        required: true
        description: Institution details for registration
        content:
          application/json:
            schema:
              type: object
              required: [name, type, publicKey]
              properties:
                name:
                  type: string
                  description: Institution name
                  example: "University of Technology"
                type:
                  type: string
                  enum: [UNIVERSITY, COLLEGE, TRANING, EXAM_BOARD]
                  description: Type of educational institution
                  example: "university"
                location:
                  type: string
                  description: Physical location of the institution
                  example: "Lagos, Nigeria"
                publicKey:
                  type: string
                  description: Institution's public key for blockchain verification
                  example: "0x1234567890abcdef"
      responses:
        "201":
          description: Institution created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  institutionId:
                    type: string
                    description: Unique identifier for the institution
                    example: "inst_123456"
                  onChainObjectId:
                    type: string
                    description: Blockchain object identifier
                    example: "0xabcdef1234567890"
                  createdAt:
                    type: string
                    format: date-time
                    description: Institution creation timestamp
                    example: "2025-07-30T10:30:00Z"

  /institutions/{institutionId}/keys:
    post:
      tags:
        - keys

      summary: Create a new API key
      description: Create a new API key for a specific institution
      parameters:
        - name: institutionId
          in: path
          required: true
          description: Unique identifier of the institution
          schema:
            type: string
            example: "inst_123456"
      requestBody:
        description: API key details
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [label, expirationDate]
              properties:
                label:
                  type: string
                  minLength: 1
                  maxLength: 100
                  description: Label for the API key
                  example: "Fiverr Developer"
                expirationDate:
                  type: string
                  pattern: '^\d{4}$'
                  description: Expiration date for the API key
                  example: "2024"
      responses:
        "201":
          description: certificates batch created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
                    description: Unique API key value
                    example: "api_key_1234567890abcdef"
    get:
      tags:
        - keys

      summary: List API keys for an institution
      description: Retrieve all API keys associated with a specific institution
      parameters:
        - name: institutionId
          in: path
          required: true
          description: Unique identifier of the institution
          schema:
            type: string
            example: "inst_123456"
      responses:
        "200":
          description: List of API keys for the institution
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: object
                      properties:
                        keyId:
                          type: string
                          description: Unique identifier for the API key
                          example: "api_key_1234567890abcdef"
                        label:
                          type: string
                          description: Label for the API key
                          example: "Fiverr Developer"
                        expirationDate:
                          type: string
                          pattern: '^\d{4}$'
                          description: Expiration date for the API key
                          example: "2024"
                        createdAt:
                          type: string
                          format: date-time
                          description: API key creation timestamp
                          example: "2025-07-30T10:30:00Z"
        "404":
          description: Institution not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /institutions/{institutionId}/keys/{keyId}:
    patch:
      tags:
        - keys

      summary: Update an API key
      description: Update details of an existing API key for a specific institution
      parameters:
        - name: institutionId
          in: path
          required: true
          description: Unique identifier of the institution
          schema:
            type: string
            example: "inst_123456"
        - name: keyId
          in: path
          required: true
          description: Unique identifier of the API key to update
          schema:
            type: string
            example: "api_key_1234567890abcdef"
      requestBody:
        description: Fields to update for the API key
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  description: New label for the API key
                  example: "Updated Label"
                expirationDate:
                  type: string
                  pattern: '^\d{4}$'
                  description: New expiration date for the API key
                  example: "2025"
      responses:
        "200":
          description: API key updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the update was successful
                    example: true
                  message:
                    type: string
                    description: Confirmation message
                    example: "API key has been updated"
    delete:
      tags:
        - keys

      summary: Delete an API key
      description: Delete an existing API key for a specific institution
      parameters:
        - name: institutionId
          in: path
          required: true
          description: Unique identifier of the institution
          schema:
            type: string
            example: "inst_123456"
        - name: keyId
          in: path
          required: true
          description: Unique identifier of the API key to delete
          schema:
            type: string
            example: "api_key_1234567890abcdef"
      responses:
        "200":
          description: API key deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the deletion was successful
                    example: true
                  message:
                    type: string
                    description: Message confirming API key deletion
                    example: "API key has been deleted"

  /institutions/{institutionId}/certificates:
    post:
      tags:
        - certificates

      summary: Issue a new certificate
      description: Issue a new certificate for a student in a specific batch
      parameters:
        - name: institutionId
          in: path
          required: true
          description: Unique identifier of the institution
          schema:
            type: string
            example: "inst_123456"
      requestBody:
        description: certificates details for the student
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                [studentName, studentId, awardDate, program, certificateType]
              properties:
                studentName:
                  type: string
                  description: Full name of the student
                  example: "John Doe"
                studentId:
                  type: string
                  description: Unique student identifier
                  example: "STU001234"
                awardDate:
                  type: string
                  format: date
                  description: Date when the certificates was awarded
                  example: "2024-06-15"
                program:
                  type: string
                  description: Program for which the certificate is issued
                  example: "JAMB"
                certificateType:
                  type: string
                  enum: [degree, diploma, certificate, transcript]
                  description: Type of certificate being issued
                  example: "degree"
      responses:
        "201":
          description: certificates issued successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  certificateHash:
                    type: string
                    description: Unique hash of the certificates on blockchain
                    example: "0x9876543210fedcba"
                  qrCodeUrl:
                    type: string
                    description: URL to the QR code for certificates verification
                    example: "https://api.learnchain.com/qr/cert_hash"
                  offChainStorageId:
                    type: string
                    description: Off-chain storage identifier for certificates details
                    example: "storage_345678"
    get:
      tags:
        - certificates

      summary: List all certificates for an institution
      description: Retrieve all certificates issued by a specific institution
      parameters:
        - name: institutionId
          in: path
          required: true
          description: Unique identifier of the institution
          schema:
            type: string
            example: "inst_123456"
      responses:
        "200":
          description: List of certificates issued by the institution
          content:
            application/json:
              schema:
                type: object
                properties:
                  certificates:
                    type: array
                    items:
                      type: object
                      properties:
                        certificateHash:
                          type: string
                          description: Unique hash of the certificate on blockchain
                          example: "0x9876543210fedcba"
                        studentName:
                          type: string
                          description: Full name of the student
                          example: "John Doe"
                        studentId:
                          type: string
                          description: Unique student identifier
                          example: "STU001234"
                        awardDate:
                          type: string
                          format: date
                          description: Date when the certificate was awarded
                          example: "2024-06-15"
                        program:
                          type: string
                          description: Program for which the certificate is issued
                          example: "JAMB"
                        certificateType:
                          type: string
                          description: Type of certificate being issued
                          example: "degree"
                        offChainStorageId:
                          type: string
                          description: Off-chain storage identifier for certificate details
                          example: "storage_345678"
        "404":
          description: Institution not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /certificates:
    get:
      tags:
        - certificates

      summary: Search for issued certificates
      description: Verify the authenticity of a certificates using institution, year, and certificates hash
      parameters:
        - name: institution
          in: query
          required: true
          description: Institution identifier or name
          schema:
            type: string
            example: "inst_123456"
        - name: year
          in: query
          required: true
          description: Academic year of the certificates
          schema:
            type: string
            pattern: '^\d{4}$'
            example: "2024"
        - name: hash
          in: query
          required: true
          description: certificates hash from blockchain
          schema:
            type: string
            example: "0x9876543210fedcba"
      responses:
        "200":
          description: Verification result with certificates details
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: Whether the certificates is valid
                    example: true
                  revoked:
                    type: boolean
                    description: Whether the certificates has been revoked
                    example: false
                  institution:
                    type: string
                    description: Name of the issuing institution
                    example: "University of Technology"
                  certificateType:
                    type: string
                    description: Type of certificates
                    example: "degree"
                  awardDate:
                    type: string
                    format: date
                    description: Date when the certificates was awarded
                    example: "2024-06-15"
                  offChainDataUrl:
                    type: string
                    description: URL to access detailed certificates data
                    example: "https://storage.learnchain.com/cert/details"
                  verifiedAt:
                    type: string
                    format: date-time
                    description: Timestamp when verification was performed
                    example: "2025-07-30T10:30:00Z"

  /certificates/{certificateId}:
    get:
      tags:
        - certificates

      summary: Retrieve a certificates
      description: Verify the authenticity of a certificates using certificates hash
      parameters:
        - name: certificateId
          in: path
          required: true
          description: Institution identifier or name
          schema:
            type: string
            example: "inst_123456"
      responses:
        "200":
          description: Verification result with certificates details
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: Whether the certificates is valid
                    example: true
                  revoked:
                    type: boolean
                    description: Whether the certificates has been revoked
                    example: false
                  institution:
                    type: string
                    description: Name of the issuing institution
                    example: "University of Technology"
                  certificateType:
                    type: string
                    description: Type of certificates
                    example: "degree"
                  awardDate:
                    type: string
                    format: date
                    description: Date when the certificates was awarded
                    example: "2024-06-15"
                  offChainDataUrl:
                    type: string
                    description: URL to access detailed certificates data
                    example: "https://storage.learnchain.com/cert/details"
                  verifiedAt:
                    type: string
                    format: date-time
                    description: Timestamp when verification was performed
                    example: "2025-07-30T10:30:00Z"

components:
  schemas:
    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error type or code
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Human-readable error message
          example: "The provided data is invalid"
        details:
          type: object
          description: Additional error details
          example: { "field": "studentId", "issue": "must be unique" }
        timestamp:
          type: string
          format: date-time
          description: When the error occurred
          example: "2025-07-30T10:30:00Z"
